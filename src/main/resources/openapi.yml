openapi: 3.0.0
info:
  title: Account Service API
  version: 1.0.0
  description: API for managing bank accounts

servers:
  - url: http://localhost/api/v1

paths:
  /accounts:
    post:
      operationId: createAccount
      summary: Create new account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountRequest'
      responses:
        '201':
          description: Account created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponse'
        '400':
          description: Invalid input data
        '500':
          description: Internal server error

  /accounts/by-account-number/{accountNumber}:
    get:
      operationId: getAccountByAccountNumber
      summary: Get account by account number
      parameters:
        - name: accountNumber
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Account found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponse'
        '404':
          description: Account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBase'

  /accounts/{id}:
    get:
      operationId: getAccountById
      summary: Get account by id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Account found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponse'
        '404':
          description: Account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBase'

    patch:
      operationId: updateAccountById
      summary: Update account by id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountPatchRequest'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Account updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponse'
        '404':
          description: No accounts found

    delete:
      operationId: deleteAccountById
      summary: Delete Account by id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Account deleted
        '404':
          description: Account not found

  /accounts/customer/{customerId}:
    get:
      operationId: getAccountsByCustomer
      summary: Get accounts by customer ID
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Accounts found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountResponse'
        '404':
          description: No accounts found
        '500':
          description: Internal server error

  /accounts/balance/{accountNumber}:
    get:
      operationId: getAccountBalance
      summary: Get account balance by account number
      parameters:
        - name: accountNumber
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Balance found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountBalanceResponse'
        '404':
          description: Account not found
        '500':
          description: Internal server error

components:
  schemas:
    AccountRequest:
      type: object
      properties:
        accountType:
          type: string
        initialBalance:
          type: number
        customerId:
          type: string
        holders:
          type: array
          items:
            $ref: '#/components/schemas/AccountHolder'
        signers:
          type: array
          items:
            $ref: '#/components/schemas/AccountSigner'
      required:
        - accountType
        - initialBalance
        - customerId
      discriminator:
        propertyName: accountType
        mapping:
          CHECKING: '#/components/schemas/CheckingAccount'
          SAVINGS: '#/components/schemas/SavingsAccount'
          FIXED_TERM: '#/components/schemas/FixedTermAccount'

    Account:
      type: object
      properties:
        accountType:
          type: string
        initialBalance:
          type: number
        customerId:
          type: string
      required:
        - accountType
        - initialBalance
        - customerId

    CheckingAccount:
      allOf:
        - $ref: '#/components/schemas/AccountRequest'

    SavingsAccount:
      allOf:
        - $ref: '#/components/schemas/AccountRequest'

    FixedTermAccount:
      allOf:
        - $ref: '#/components/schemas/AccountRequest'
        - type: object
          properties:
            termInMonths:
              type: integer
          required:
            - termInMonths

    AccountMember:
      type: object
      properties:
        name:
          type: string
        lastName:
          type: string
        dni:
          type: string
        email:
          type: string
      required:
        - name
        - lastName
        - dni
        - email

    AccountHolder:
      allOf:
        - $ref: '#/components/schemas/AccountMember'

    AccountSigner:
      allOf:
        - $ref: '#/components/schemas/AccountMember'

    AccountPatchRequest:
      type: object
      properties:
        status:
          type: string
        balance:
          type: number
        monthlyMovements:
          type: integer

    AccountResponse:
      type: object
      properties:
        id:
          type: string
        accountNumber:
          type: string
        accountType:
          type: string
        balance:
          type: number
        customerId:
          type: string
        creationDate:
          type: string
          format: date-time
        status:
          type: string
        monthlyMovements:
          type: integer
        maintenanceFee:
          type: number
          format: double
        endDay:
          type: string
          format: date-time
        availableDayForMovements:
          type: integer
        maxMonthlyMovements:
          type: integer
        holders:
          type: array
          items:
            $ref: '#/components/schemas/AccountHolder'
        signers:
          type: array
          items:
            $ref: '#/components/schemas/AccountSigner'

    CustomerResponse:
      type: object
      properties:
        id:
          type: string
        documentNumber:
          type: string
        ruc:
          type: string
        businessName:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        type:
          type: string
        status:
          type: string

    ResponseBase:
      type: object
      properties:
        message:
          type: string

    AccountBalanceResponse:
      type: object
      properties:
        balance:
          type: number